{
  "version": 3,
  "sources": ["../node_modules/osascript-tag/dist/index.js", "../src/edit-color.tsx", "../src/utilities.ts"],
  "sourcesContent": ["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChildProcess = __importStar(require(\"child_process\"));\nfunction isTemplateString(value) {\n    return Array.isArray(value) && Object.prototype.hasOwnProperty.call(value, 'raw');\n}\nfunction buildString(strings, replacements) {\n    var result = '';\n    var totalStrings = strings.length;\n    for (var i = 0; i < totalStrings; i++) {\n        var value = i < totalStrings - 1 ? replacements[i] : '';\n        result += strings[i] + value;\n    }\n    return result.trim();\n}\nfunction runScript(strings, replacements, options) {\n    if (options === void 0) { options = {}; }\n    if (process.platform !== 'darwin') {\n        return Promise.reject(new Error('osascript-tag requires macOS'));\n    }\n    return new Promise(function (resolve, reject) {\n        var argv = options.argv || [];\n        var flags = [];\n        var script = buildString(strings, replacements);\n        var language = 'AppleScript';\n        if (options.language === 'JavaScript') {\n            language = options.language;\n            script = \"(function(...argv){\" + script + \"})(\" + argv.map(function (value) { return JSON.stringify(value); }) + \")\";\n        }\n        if (options.parse) {\n            flags = ['-s', 's'];\n        }\n        if (typeof options.flags === 'string') {\n            flags = ['-s', options.flags];\n        }\n        var child = ChildProcess.spawn('osascript', ['-l', language].concat(flags, ['-e', script]));\n        var errorString = '';\n        child.stderr.on('data', function (error) {\n            errorString += error.toString();\n        });\n        var dataString = '';\n        child.stdout.on('data', function (data) {\n            dataString += data.toString();\n        });\n        child.on('close', function () {\n            if (errorString) {\n                reject(errorString);\n            }\n            else {\n                var result = dataString;\n                if (options.parse) {\n                    try {\n                        result = JSON.parse(dataString);\n                    }\n                    catch (error) {\n                        reject(error);\n                    }\n                }\n                resolve(result);\n            }\n        });\n        child.on('error', function (error) {\n            reject(error);\n        });\n    });\n}\nfunction osascript(scriptOrOptions) {\n    var replacementsArray = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        replacementsArray[_i - 1] = arguments[_i];\n    }\n    if (isTemplateString(scriptOrOptions)) {\n        return runScript(scriptOrOptions, replacementsArray, {});\n    }\n    return function (script) {\n        var replacements = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            replacements[_i - 1] = arguments[_i];\n        }\n        return runScript(script, replacements, scriptOrOptions);\n    };\n}\nfunction execJXA(scriptOrOptions) {\n    var replacementsArray = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        replacementsArray[_i - 1] = arguments[_i];\n    }\n    if (isTemplateString(scriptOrOptions)) {\n        return runScript(scriptOrOptions, replacementsArray, {\n            language: 'JavaScript',\n        });\n    }\n    return function (strings) {\n        var replacements = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            replacements[_i - 1] = arguments[_i];\n        }\n        return runScript(strings, replacements, __assign({ language: 'JavaScript' }, scriptOrOptions));\n    };\n}\nosascript.jxa = execJXA;\nexports.jxa = execJXA;\nexports.default = osascript;\n", "import { openColorSlurpUrl } from \"./utilities\";\n\ninterface EditColorArguments {\n  color: string;\n}\n\nexport default async function Command(props: { arguments: EditColorArguments }) {\n  const { color } = props.arguments;\n\n  await openColorSlurpUrl(`colorslurp://x-callback-url/show-picker?color=${encodeURIComponent(color)}`);\n}\n", "import { getApplications, showToast, Toast, open, closeMainWindow } from \"@raycast/api\";\nimport osascript from \"osascript-tag\";\n\nasync function isColorSlurpInstalled() {\n  const applications = await getApplications();\n\n  return applications.some(({ bundleId }) => {\n    return bundleId === \"com.IdeaPunch.ColorSlurp\";\n  });\n}\n\nexport async function openColorSlurpUrl(url: string) {\n  if (!(await isColorSlurpInstalled())) {\n    await showToast({\n      style: Toast.Style.Failure,\n      title: \"ColorSlurp isn't installed\",\n      message: \"You can download it from the website or the app store\",\n      primaryAction: { title: \"Open Website\", onAction: () => open(\"https://colorslurp.com?utm_source=raycast\") },\n      secondaryAction: {\n        title: \"Open App Store\",\n        onAction: () => open(\"https://apps.apple.com/us/app/colorslurp/id1287239339#?platform=mac\"),\n      },\n    });\n\n    return;\n  } else {\n    await closeMainWindow();\n    await open(url);\n  }\n}\n\nexport async function runAppleScriptJs(script: string) {\n  try {\n    const result = await osascript.jxa({ parse: true })`${script}`;\n    return result;\n  } catch (err: unknown) {\n    if (typeof err === \"string\") {\n      const message = err.replace(\"execution error: Error: \", \"\");\n      console.log(err);\n      showToast({\n        style: Toast.Style.Failure,\n        title: \"Something went wrong\",\n        message: message,\n      });\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": ["require_dist", "__commonJSMin", "exports", "__assign", "t", "s", "i", "p", "__importStar", "mod", "result", "k", "ChildProcess", "isTemplateString", "value", "buildString", "strings", "replacements", "totalStrings", "runScript", "options", "resolve", "reject", "argv", "flags", "script", "language", "child", "errorString", "error", "dataString", "data", "osascript", "scriptOrOptions", "replacementsArray", "_i", "execJXA", "edit_color_exports", "__export", "Command", "__toCommonJS", "import_api", "import_osascript_tag", "isColorSlurpInstalled", "bundleId", "openColorSlurpUrl", "url", "Command", "props", "color", "openColorSlurpUrl"]
}
